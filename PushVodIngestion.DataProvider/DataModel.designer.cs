#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PushVodIngestion.DataProvider
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbPushVOD")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Adi_ingest_item_file_info(tbl_Adi_ingest_item_file_info instance);
    partial void Updatetbl_Adi_ingest_item_file_info(tbl_Adi_ingest_item_file_info instance);
    partial void Deletetbl_Adi_ingest_item_file_info(tbl_Adi_ingest_item_file_info instance);
    partial void InserttblAutomation(tblAutomation instance);
    partial void UpdatetblAutomation(tblAutomation instance);
    partial void DeletetblAutomation(tblAutomation instance);
    partial void InserttblChannel(tblChannel instance);
    partial void UpdatetblChannel(tblChannel instance);
    partial void DeletetblChannel(tblChannel instance);
    partial void InserttblDe(tblDe instance);
    partial void UpdatetblDe(tblDe instance);
    partial void DeletetblDe(tblDe instance);
    partial void InserttblIngestion(tblIngestion instance);
    partial void UpdatetblIngestion(tblIngestion instance);
    partial void DeletetblIngestion(tblIngestion instance);
    partial void InserttblPlayoutPort(tblPlayoutPort instance);
    partial void UpdatetblPlayoutPort(tblPlayoutPort instance);
    partial void DeletetblPlayoutPort(tblPlayoutPort instance);
    partial void InserttblReportVersion(tblReportVersion instance);
    partial void UpdatetblReportVersion(tblReportVersion instance);
    partial void DeletetblReportVersion(tblReportVersion instance);
    partial void InserttblSourceType(tblSourceType instance);
    partial void UpdatetblSourceType(tblSourceType instance);
    partial void DeletetblSourceType(tblSourceType instance);
    partial void InserttblSrc(tblSrc instance);
    partial void UpdatetblSrc(tblSrc instance);
    partial void DeletetblSrc(tblSrc instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InserttblPlaylistSecondryEvent(tblPlaylistSecondryEvent instance);
    partial void UpdatetblPlaylistSecondryEvent(tblPlaylistSecondryEvent instance);
    partial void DeletetblPlaylistSecondryEvent(tblPlaylistSecondryEvent instance);
    partial void InserttblPlaylistSecondryEventDetail(tblPlaylistSecondryEventDetail instance);
    partial void UpdatetblPlaylistSecondryEventDetail(tblPlaylistSecondryEventDetail instance);
    partial void DeletetblPlaylistSecondryEventDetail(tblPlaylistSecondryEventDetail instance);
    partial void InserttblSecondryEventRule(tblSecondryEventRule instance);
    partial void UpdatetblSecondryEventRule(tblSecondryEventRule instance);
    partial void DeletetblSecondryEventRule(tblSecondryEventRule instance);
    partial void InserttblPlaylist(tblPlaylist instance);
    partial void UpdatetblPlaylist(tblPlaylist instance);
    partial void DeletetblPlaylist(tblPlaylist instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::PushVodIngestion.DataProvider.Properties.Settings.Default.dbPushVODConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Adi_ingest_item_file_info> tbl_Adi_ingest_item_file_infos
		{
			get
			{
				return this.GetTable<tbl_Adi_ingest_item_file_info>();
			}
		}
		
		public System.Data.Linq.Table<tblAutomation> tblAutomations
		{
			get
			{
				return this.GetTable<tblAutomation>();
			}
		}
		
		public System.Data.Linq.Table<tblChannel> tblChannels
		{
			get
			{
				return this.GetTable<tblChannel>();
			}
		}
		
		public System.Data.Linq.Table<tblDe> tblDes
		{
			get
			{
				return this.GetTable<tblDe>();
			}
		}
		
		public System.Data.Linq.Table<tblIngestion> tblIngestions
		{
			get
			{
				return this.GetTable<tblIngestion>();
			}
		}
		
		public System.Data.Linq.Table<tblPlayoutPort> tblPlayoutPorts
		{
			get
			{
				return this.GetTable<tblPlayoutPort>();
			}
		}
		
		public System.Data.Linq.Table<tblReportVersion> tblReportVersions
		{
			get
			{
				return this.GetTable<tblReportVersion>();
			}
		}
		
		public System.Data.Linq.Table<tblSourceType> tblSourceTypes
		{
			get
			{
				return this.GetTable<tblSourceType>();
			}
		}
		
		public System.Data.Linq.Table<tblSrc> tblSrcs
		{
			get
			{
				return this.GetTable<tblSrc>();
			}
		}
		
		public System.Data.Linq.Table<vwApprovedPlaylist> vwApprovedPlaylists
		{
			get
			{
				return this.GetTable<vwApprovedPlaylist>();
			}
		}
		
		public System.Data.Linq.Table<vwChannel> vwChannels
		{
			get
			{
				return this.GetTable<vwChannel>();
			}
		}
		
		public System.Data.Linq.Table<vwDubList> vwDubLists
		{
			get
			{
				return this.GetTable<vwDubList>();
			}
		}
		
		public System.Data.Linq.Table<vwIngestion> vwIngestions
		{
			get
			{
				return this.GetTable<vwIngestion>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<tblPlaylistSecondryEvent> tblPlaylistSecondryEvents
		{
			get
			{
				return this.GetTable<tblPlaylistSecondryEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblPlaylistSecondryEventDetail> tblPlaylistSecondryEventDetails
		{
			get
			{
				return this.GetTable<tblPlaylistSecondryEventDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblSecondryEventRule> tblSecondryEventRules
		{
			get
			{
				return this.GetTable<tblSecondryEventRule>();
			}
		}
		
		public System.Data.Linq.Table<tblPlaylist> tblPlaylists
		{
			get
			{
				return this.GetTable<tblPlaylist>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserChannels")]
		public ISingleResult<tblPlayoutPort> GetUserChannels([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userSID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userSID);
			return ((ISingleResult<tblPlayoutPort>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserIngestion")]
		public ISingleResult<tblIngestion> GetUserIngestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userSID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userSID);
			return ((ISingleResult<tblIngestion>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Adi_ingest_item_file_info")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tbl_Adi_ingest_item_file_info : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _itemCode;
		
		private string _name;
		
		private string _duration_Frames;
		
		private System.Guid _rowguid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnitemCodeChanging(string value);
    partial void OnitemCodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onduration_FramesChanging(string value);
    partial void Onduration_FramesChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public tbl_Adi_ingest_item_file_info()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this.OnitemCodeChanging(value);
					this.SendPropertyChanging();
					this._itemCode = value;
					this.SendPropertyChanged("itemCode");
					this.OnitemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration_Frames", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string duration_Frames
		{
			get
			{
				return this._duration_Frames;
			}
			set
			{
				if ((this._duration_Frames != value))
				{
					this.Onduration_FramesChanging(value);
					this.SendPropertyChanging();
					this._duration_Frames = value;
					this.SendPropertyChanged("duration_Frames");
					this.Onduration_FramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAutomation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblAutomation : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _AutomationPlateform;
		
		private EntitySet<tblPlayoutPort> _tblPlayoutPorts;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnAutomationPlateformChanging(string value);
    partial void OnAutomationPlateformChanged();
    #endregion
		
		public tblAutomation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationPlateform", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AutomationPlateform
		{
			get
			{
				return this._AutomationPlateform;
			}
			set
			{
				if ((this._AutomationPlateform != value))
				{
					this.OnAutomationPlateformChanging(value);
					this.SendPropertyChanging();
					this._AutomationPlateform = value;
					this.SendPropertyChanged("AutomationPlateform");
					this.OnAutomationPlateformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAutomation_tblPlayoutPort", Storage="_tblPlayoutPorts", ThisKey="SID", OtherKey="AutomationSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<tblPlayoutPort> tblPlayoutPorts
		{
			get
			{
				if ((this.serializing 
							&& (this._tblPlayoutPorts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblPlayoutPorts;
			}
			set
			{
				this._tblPlayoutPorts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlayoutPorts(tblPlayoutPort entity)
		{
			this.SendPropertyChanging();
			entity.tblAutomation = this;
		}
		
		private void detach_tblPlayoutPorts(tblPlayoutPort entity)
		{
			this.SendPropertyChanging();
			entity.tblAutomation = null;
		}
		
		private void Initialize()
		{
			this._tblPlayoutPorts = new EntitySet<tblPlayoutPort>(new Action<tblPlayoutPort>(this.attach_tblPlayoutPorts), new Action<tblPlayoutPort>(this.detach_tblPlayoutPorts));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblChannel")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblChannel : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private System.Nullable<long> _SrcSID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _addon;
		
		private System.Nullable<System.DateTime> _modon;
		
		private EntitySet<tblIngestion> _tblIngestions;
		
		private EntityRef<tblSrc> _tblSrc;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnSrcSIDChanging(System.Nullable<long> value);
    partial void OnSrcSIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnaddonChanging(System.Nullable<System.DateTime> value);
    partial void OnaddonChanged();
    partial void OnmodonChanging(System.Nullable<System.DateTime> value);
    partial void OnmodonChanged();
    #endregion
		
		public tblChannel()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> SrcSID
		{
			get
			{
				return this._SrcSID;
			}
			set
			{
				if ((this._SrcSID != value))
				{
					if (this._tblSrc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSrcSIDChanging(value);
					this.SendPropertyChanging();
					this._SrcSID = value;
					this.SendPropertyChanged("SrcSID");
					this.OnSrcSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> addon
		{
			get
			{
				return this._addon;
			}
			set
			{
				if ((this._addon != value))
				{
					this.OnaddonChanging(value);
					this.SendPropertyChanging();
					this._addon = value;
					this.SendPropertyChanged("addon");
					this.OnaddonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> modon
		{
			get
			{
				return this._modon;
			}
			set
			{
				if ((this._modon != value))
				{
					this.OnmodonChanging(value);
					this.SendPropertyChanging();
					this._modon = value;
					this.SendPropertyChanged("modon");
					this.OnmodonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblChannel_tblIngestion", Storage="_tblIngestions", ThisKey="SID", OtherKey="ChannelSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<tblIngestion> tblIngestions
		{
			get
			{
				if ((this.serializing 
							&& (this._tblIngestions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblIngestions;
			}
			set
			{
				this._tblIngestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSrc_tblChannel", Storage="_tblSrc", ThisKey="SrcSID", OtherKey="SID", IsForeignKey=true)]
		public tblSrc tblSrc
		{
			get
			{
				return this._tblSrc.Entity;
			}
			set
			{
				tblSrc previousValue = this._tblSrc.Entity;
				if (((previousValue != value) 
							|| (this._tblSrc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSrc.Entity = null;
						previousValue.tblChannels.Remove(this);
					}
					this._tblSrc.Entity = value;
					if ((value != null))
					{
						value.tblChannels.Add(this);
						this._SrcSID = value.SID;
					}
					else
					{
						this._SrcSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblSrc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblChannel = this;
		}
		
		private void detach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblChannel = null;
		}
		
		private void Initialize()
		{
			this._tblIngestions = new EntitySet<tblIngestion>(new Action<tblIngestion>(this.attach_tblIngestions), new Action<tblIngestion>(this.detach_tblIngestions));
			this._tblSrc = default(EntityRef<tblSrc>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblDe : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _Name;
		
		private string _Camera;
		
		private EntitySet<tblIngestion> _tblIngestions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCameraChanging(string value);
    partial void OnCameraChanged();
    #endregion
		
		public tblDe()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Camera", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Camera
		{
			get
			{
				return this._Camera;
			}
			set
			{
				if ((this._Camera != value))
				{
					this.OnCameraChanging(value);
					this.SendPropertyChanging();
					this._Camera = value;
					this.SendPropertyChanged("Camera");
					this.OnCameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDe_tblIngestion", Storage="_tblIngestions", ThisKey="SID", OtherKey="DesSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<tblIngestion> tblIngestions
		{
			get
			{
				if ((this.serializing 
							&& (this._tblIngestions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblIngestions;
			}
			set
			{
				this._tblIngestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblDe = this;
		}
		
		private void detach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblDe = null;
		}
		
		private void Initialize()
		{
			this._tblIngestions = new EntitySet<tblIngestion>(new Action<tblIngestion>(this.attach_tblIngestions), new Action<tblIngestion>(this.detach_tblIngestions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblIngestion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblIngestion : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _TxId;
		
		private long _ChannelSID;
		
		private string _ProgrameName;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.TimeSpan> _StartTime;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.TimeSpan> _EndTime;
		
		private System.Nullable<System.TimeSpan> _Duration;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.Nullable<System.DateTime> _addon;
		
		private System.Nullable<System.DateTime> _modon;
		
		private System.Nullable<long> _DesSID;
		
		private System.Nullable<long> _SourceTypeSID;
		
		private string _itemCode;
		
		private System.Nullable<bool> _ReadyToAir;
		
		private string _Remark;
		
		private EntitySet<tblPlaylist> _tblPlaylists;
		
		private EntityRef<tblChannel> _tblChannel;
		
		private EntityRef<tblDe> _tblDe;
		
		private EntityRef<tblSourceType> _tblSourceType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnTxIdChanging(string value);
    partial void OnTxIdChanged();
    partial void OnChannelSIDChanging(long value);
    partial void OnChannelSIDChanged();
    partial void OnProgrameNameChanging(string value);
    partial void OnProgrameNameChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnStartTimeChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEndTimeChanged();
    partial void OnDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDurationChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnaddonChanging(System.Nullable<System.DateTime> value);
    partial void OnaddonChanged();
    partial void OnmodonChanging(System.Nullable<System.DateTime> value);
    partial void OnmodonChanged();
    partial void OnDesSIDChanging(System.Nullable<long> value);
    partial void OnDesSIDChanged();
    partial void OnSourceTypeSIDChanging(System.Nullable<long> value);
    partial void OnSourceTypeSIDChanged();
    partial void OnitemCodeChanging(string value);
    partial void OnitemCodeChanged();
    partial void OnReadyToAirChanging(System.Nullable<bool> value);
    partial void OnReadyToAirChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public tblIngestion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxId", AutoSync=AutoSync.Always, DbType="VarChar(10)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TxId
		{
			get
			{
				return this._TxId;
			}
			set
			{
				if ((this._TxId != value))
				{
					this.OnTxIdChanging(value);
					this.SendPropertyChanging();
					this._TxId = value;
					this.SendPropertyChanged("TxId");
					this.OnTxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelSID", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long ChannelSID
		{
			get
			{
				return this._ChannelSID;
			}
			set
			{
				if ((this._ChannelSID != value))
				{
					if (this._tblChannel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChannelSIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelSID = value;
					this.SendPropertyChanged("ChannelSID");
					this.OnChannelSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrameName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProgrameName
		{
			get
			{
				return this._ProgrameName;
			}
			set
			{
				if ((this._ProgrameName != value))
				{
					this.OnProgrameNameChanging(value);
					this.SendPropertyChanging();
					this._ProgrameName = value;
					this.SendPropertyChanged("ProgrameName");
					this.OnProgrameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.TimeSpan> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.TimeSpan> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.TimeSpan> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> addon
		{
			get
			{
				return this._addon;
			}
			set
			{
				if ((this._addon != value))
				{
					this.OnaddonChanging(value);
					this.SendPropertyChanging();
					this._addon = value;
					this.SendPropertyChanged("addon");
					this.OnaddonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> modon
		{
			get
			{
				return this._modon;
			}
			set
			{
				if ((this._modon != value))
				{
					this.OnmodonChanging(value);
					this.SendPropertyChanging();
					this._modon = value;
					this.SendPropertyChanged("modon");
					this.OnmodonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<long> DesSID
		{
			get
			{
				return this._DesSID;
			}
			set
			{
				if ((this._DesSID != value))
				{
					if (this._tblDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesSIDChanging(value);
					this.SendPropertyChanging();
					this._DesSID = value;
					this.SendPropertyChanged("DesSID");
					this.OnDesSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTypeSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<long> SourceTypeSID
		{
			get
			{
				return this._SourceTypeSID;
			}
			set
			{
				if ((this._SourceTypeSID != value))
				{
					if (this._tblSourceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceTypeSIDChanging(value);
					this.SendPropertyChanging();
					this._SourceTypeSID = value;
					this.SendPropertyChanged("SourceTypeSID");
					this.OnSourceTypeSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this.OnitemCodeChanging(value);
					this.SendPropertyChanging();
					this._itemCode = value;
					this.SendPropertyChanged("itemCode");
					this.OnitemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadyToAir", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> ReadyToAir
		{
			get
			{
				return this._ReadyToAir;
			}
			set
			{
				if ((this._ReadyToAir != value))
				{
					this.OnReadyToAirChanging(value);
					this.SendPropertyChanging();
					this._ReadyToAir = value;
					this.SendPropertyChanged("ReadyToAir");
					this.OnReadyToAirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblIngestion_tblPlaylist", Storage="_tblPlaylists", ThisKey="SID", OtherKey="MediaSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<tblPlaylist> tblPlaylists
		{
			get
			{
				if ((this.serializing 
							&& (this._tblPlaylists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblPlaylists;
			}
			set
			{
				this._tblPlaylists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblChannel_tblIngestion", Storage="_tblChannel", ThisKey="ChannelSID", OtherKey="SID", IsForeignKey=true)]
		public tblChannel tblChannel
		{
			get
			{
				return this._tblChannel.Entity;
			}
			set
			{
				tblChannel previousValue = this._tblChannel.Entity;
				if (((previousValue != value) 
							|| (this._tblChannel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblChannel.Entity = null;
						previousValue.tblIngestions.Remove(this);
					}
					this._tblChannel.Entity = value;
					if ((value != null))
					{
						value.tblIngestions.Add(this);
						this._ChannelSID = value.SID;
					}
					else
					{
						this._ChannelSID = default(long);
					}
					this.SendPropertyChanged("tblChannel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDe_tblIngestion", Storage="_tblDe", ThisKey="DesSID", OtherKey="SID", IsForeignKey=true)]
		public tblDe tblDe
		{
			get
			{
				return this._tblDe.Entity;
			}
			set
			{
				tblDe previousValue = this._tblDe.Entity;
				if (((previousValue != value) 
							|| (this._tblDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDe.Entity = null;
						previousValue.tblIngestions.Remove(this);
					}
					this._tblDe.Entity = value;
					if ((value != null))
					{
						value.tblIngestions.Add(this);
						this._DesSID = value.SID;
					}
					else
					{
						this._DesSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSourceType_tblIngestion", Storage="_tblSourceType", ThisKey="SourceTypeSID", OtherKey="SID", IsForeignKey=true)]
		public tblSourceType tblSourceType
		{
			get
			{
				return this._tblSourceType.Entity;
			}
			set
			{
				tblSourceType previousValue = this._tblSourceType.Entity;
				if (((previousValue != value) 
							|| (this._tblSourceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSourceType.Entity = null;
						previousValue.tblIngestions.Remove(this);
					}
					this._tblSourceType.Entity = value;
					if ((value != null))
					{
						value.tblIngestions.Add(this);
						this._SourceTypeSID = value.SID;
					}
					else
					{
						this._SourceTypeSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblSourceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlaylists(tblPlaylist entity)
		{
			this.SendPropertyChanging();
			entity.tblIngestion = this;
		}
		
		private void detach_tblPlaylists(tblPlaylist entity)
		{
			this.SendPropertyChanging();
			entity.tblIngestion = null;
		}
		
		private void Initialize()
		{
			this._tblPlaylists = new EntitySet<tblPlaylist>(new Action<tblPlaylist>(this.attach_tblPlaylists), new Action<tblPlaylist>(this.detach_tblPlaylists));
			this._tblChannel = default(EntityRef<tblChannel>);
			this._tblDe = default(EntityRef<tblDe>);
			this._tblSourceType = default(EntityRef<tblSourceType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlayoutPort")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblPlayoutPort : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _Descriptions;
		
		private string _ChannelName;
		
		private System.Nullable<long> _AutomationSID;
		
		private System.Nullable<System.TimeSpan> _StartTime;
		
		private EntitySet<tblPlaylist> _tblPlaylists;
		
		private EntityRef<tblAutomation> _tblAutomation;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    partial void OnChannelNameChanging(string value);
    partial void OnChannelNameChanged();
    partial void OnAutomationSIDChanging(System.Nullable<long> value);
    partial void OnAutomationSIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnStartTimeChanged();
    #endregion
		
		public tblPlayoutPort()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ChannelName
		{
			get
			{
				return this._ChannelName;
			}
			set
			{
				if ((this._ChannelName != value))
				{
					this.OnChannelNameChanging(value);
					this.SendPropertyChanging();
					this._ChannelName = value;
					this.SendPropertyChanged("ChannelName");
					this.OnChannelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> AutomationSID
		{
			get
			{
				return this._AutomationSID;
			}
			set
			{
				if ((this._AutomationSID != value))
				{
					if (this._tblAutomation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutomationSIDChanging(value);
					this.SendPropertyChanging();
					this._AutomationSID = value;
					this.SendPropertyChanged("AutomationSID");
					this.OnAutomationSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.TimeSpan> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlayoutPort_tblPlaylist", Storage="_tblPlaylists", ThisKey="SID", OtherKey="PlayoutPortSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<tblPlaylist> tblPlaylists
		{
			get
			{
				if ((this.serializing 
							&& (this._tblPlaylists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblPlaylists;
			}
			set
			{
				this._tblPlaylists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAutomation_tblPlayoutPort", Storage="_tblAutomation", ThisKey="AutomationSID", OtherKey="SID", IsForeignKey=true)]
		public tblAutomation tblAutomation
		{
			get
			{
				return this._tblAutomation.Entity;
			}
			set
			{
				tblAutomation previousValue = this._tblAutomation.Entity;
				if (((previousValue != value) 
							|| (this._tblAutomation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAutomation.Entity = null;
						previousValue.tblPlayoutPorts.Remove(this);
					}
					this._tblAutomation.Entity = value;
					if ((value != null))
					{
						value.tblPlayoutPorts.Add(this);
						this._AutomationSID = value.SID;
					}
					else
					{
						this._AutomationSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAutomation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlaylists(tblPlaylist entity)
		{
			this.SendPropertyChanging();
			entity.tblPlayoutPort = this;
		}
		
		private void detach_tblPlaylists(tblPlaylist entity)
		{
			this.SendPropertyChanging();
			entity.tblPlayoutPort = null;
		}
		
		private void Initialize()
		{
			this._tblPlaylists = new EntitySet<tblPlaylist>(new Action<tblPlaylist>(this.attach_tblPlaylists), new Action<tblPlaylist>(this.detach_tblPlaylists));
			this._tblAutomation = default(EntityRef<tblAutomation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReportVersion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblReportVersion : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _ReportName;
		
		private System.Nullable<int> _lastVersion;
		
		private System.Nullable<System.DateTime> _lastDate;
		
		private System.Nullable<long> _ChannelSID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnlastVersionChanging(System.Nullable<int> value);
    partial void OnlastVersionChanged();
    partial void OnlastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastDateChanged();
    partial void OnChannelSIDChanging(System.Nullable<long> value);
    partial void OnChannelSIDChanged();
    #endregion
		
		public tblReportVersion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastVersion", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> lastVersion
		{
			get
			{
				return this._lastVersion;
			}
			set
			{
				if ((this._lastVersion != value))
				{
					this.OnlastVersionChanging(value);
					this.SendPropertyChanging();
					this._lastVersion = value;
					this.SendPropertyChanged("lastVersion");
					this.OnlastVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> lastDate
		{
			get
			{
				return this._lastDate;
			}
			set
			{
				if ((this._lastDate != value))
				{
					this.OnlastDateChanging(value);
					this.SendPropertyChanging();
					this._lastDate = value;
					this.SendPropertyChanged("lastDate");
					this.OnlastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> ChannelSID
		{
			get
			{
				return this._ChannelSID;
			}
			set
			{
				if ((this._ChannelSID != value))
				{
					this.OnChannelSIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelSID = value;
					this.SendPropertyChanged("ChannelSID");
					this.OnChannelSIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSourceType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblSourceType : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _Description;
		
		private EntitySet<tblIngestion> _tblIngestions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblSourceType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSourceType_tblIngestion", Storage="_tblIngestions", ThisKey="SID", OtherKey="SourceTypeSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<tblIngestion> tblIngestions
		{
			get
			{
				if ((this.serializing 
							&& (this._tblIngestions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblIngestions;
			}
			set
			{
				this._tblIngestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblSourceType = this;
		}
		
		private void detach_tblIngestions(tblIngestion entity)
		{
			this.SendPropertyChanging();
			entity.tblSourceType = null;
		}
		
		private void Initialize()
		{
			this._tblIngestions = new EntitySet<tblIngestion>(new Action<tblIngestion>(this.attach_tblIngestions), new Action<tblIngestion>(this.detach_tblIngestions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSrc")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblSrc : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _Name;
		
		private EntitySet<tblChannel> _tblChannels;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblSrc()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSrc_tblChannel", Storage="_tblChannels", ThisKey="SID", OtherKey="SrcSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<tblChannel> tblChannels
		{
			get
			{
				if ((this.serializing 
							&& (this._tblChannels.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblChannels;
			}
			set
			{
				this._tblChannels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblChannels(tblChannel entity)
		{
			this.SendPropertyChanging();
			entity.tblSrc = this;
		}
		
		private void detach_tblChannels(tblChannel entity)
		{
			this.SendPropertyChanging();
			entity.tblSrc = null;
		}
		
		private void Initialize()
		{
			this._tblChannels = new EntitySet<tblChannel>(new Action<tblChannel>(this.attach_tblChannels), new Action<tblChannel>(this.detach_tblChannels));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwApprovedPlaylist")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class vwApprovedPlaylist : Framework.LINQEntityBase
	{
		
		private long _SID;
		
		private System.Nullable<System.TimeSpan> _PlayoutTime;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _PlayoutPortSID;
		
		private System.Nullable<long> _MediaSID;
		
		private System.Nullable<System.DateTime> _addon;
		
		private System.Nullable<System.DateTime> _modon;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<double> _PlayOrderSID;
		
		private System.Nullable<bool> _FixedEvent;
		
		private System.Nullable<System.DateTime> _SchDate;
		
		private System.Nullable<bool> _Approved;
		
		private System.Nullable<bool> _Exported;
		
		public vwApprovedPlaylist()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayoutTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.TimeSpan> PlayoutTime
		{
			get
			{
				return this._PlayoutTime;
			}
			set
			{
				if ((this._PlayoutTime != value))
				{
					this._PlayoutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayoutPortSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> PlayoutPortSID
		{
			get
			{
				return this._PlayoutPortSID;
			}
			set
			{
				if ((this._PlayoutPortSID != value))
				{
					this._PlayoutPortSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> MediaSID
		{
			get
			{
				return this._MediaSID;
			}
			set
			{
				if ((this._MediaSID != value))
				{
					this._MediaSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> addon
		{
			get
			{
				return this._addon;
			}
			set
			{
				if ((this._addon != value))
				{
					this._addon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> modon
		{
			get
			{
				return this._modon;
			}
			set
			{
				if ((this._modon != value))
				{
					this._modon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayOrderSID", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> PlayOrderSID
		{
			get
			{
				return this._PlayOrderSID;
			}
			set
			{
				if ((this._PlayOrderSID != value))
				{
					this._PlayOrderSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedEvent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> FixedEvent
		{
			get
			{
				return this._FixedEvent;
			}
			set
			{
				if ((this._FixedEvent != value))
				{
					this._FixedEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> SchDate
		{
			get
			{
				return this._SchDate;
			}
			set
			{
				if ((this._SchDate != value))
				{
					this._SchDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this._Approved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exported", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> Exported
		{
			get
			{
				return this._Exported;
			}
			set
			{
				if ((this._Exported != value))
				{
					this._Exported = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwChannel")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class vwChannel : Framework.LINQEntityBase
	{
		
		private long _SID;
		
		private string _Name;
		
		private string _SourcePort;
		
		public vwChannel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePort", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SourcePort
		{
			get
			{
				return this._SourcePort;
			}
			set
			{
				if ((this._SourcePort != value))
				{
					this._SourcePort = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwDubList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class vwDubList : Framework.LINQEntityBase
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _itemCode;
		
		private System.Nullable<long> _SourceTypeSID;
		
		private string _ProgrameName;
		
		private System.Nullable<System.TimeSpan> _Duration;
		
		public vwDubList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this._itemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTypeSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> SourceTypeSID
		{
			get
			{
				return this._SourceTypeSID;
			}
			set
			{
				if ((this._SourceTypeSID != value))
				{
					this._SourceTypeSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrameName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProgrameName
		{
			get
			{
				return this._ProgrameName;
			}
			set
			{
				if ((this._ProgrameName != value))
				{
					this._ProgrameName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.TimeSpan> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwIngestion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class vwIngestion : Framework.LINQEntityBase
	{
		
		private long _SID;
		
		private string _TxId;
		
		private string _ProgrameName;
		
		private string _ChannelName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.TimeSpan> _StartTime;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.TimeSpan> _EndTime;
		
		private string _SorcePort;
		
		private string _DestinationPort;
		
		private string _Camera;
		
		private long _DestinationPortSID;
		
		private System.Nullable<long> _SourceTypeSID;
		
		private System.Nullable<System.TimeSpan> _Duration;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		public vwIngestion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxId", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TxId
		{
			get
			{
				return this._TxId;
			}
			set
			{
				if ((this._TxId != value))
				{
					this._TxId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrameName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProgrameName
		{
			get
			{
				return this._ProgrameName;
			}
			set
			{
				if ((this._ProgrameName != value))
				{
					this._ProgrameName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ChannelName
		{
			get
			{
				return this._ChannelName;
			}
			set
			{
				if ((this._ChannelName != value))
				{
					this._ChannelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.TimeSpan> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.TimeSpan> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SorcePort", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string SorcePort
		{
			get
			{
				return this._SorcePort;
			}
			set
			{
				if ((this._SorcePort != value))
				{
					this._SorcePort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPort", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string DestinationPort
		{
			get
			{
				return this._DestinationPort;
			}
			set
			{
				if ((this._DestinationPort != value))
				{
					this._DestinationPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Camera", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Camera
		{
			get
			{
				return this._Camera;
			}
			set
			{
				if ((this._Camera != value))
				{
					this._Camera = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPortSID", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public long DestinationPortSID
		{
			get
			{
				return this._DestinationPortSID;
			}
			set
			{
				if ((this._DestinationPortSID != value))
				{
					this._DestinationPortSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTypeSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<long> SourceTypeSID
		{
			get
			{
				return this._SourceTypeSID;
			}
			set
			{
				if ((this._SourceTypeSID != value))
				{
					this._SourceTypeSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.TimeSpan> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this._DeleteDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _UserName;
		
		private string _LoginName;
		
		private string _LoginPassword;
		
		private bool _IsActive;
		
		private string _PrefixList;
		
		private string _ChannelList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPrefixListChanging(string value);
    partial void OnPrefixListChanged();
    partial void OnChannelListChanging(string value);
    partial void OnChannelListChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixList", DbType="VarChar(15)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PrefixList
		{
			get
			{
				return this._PrefixList;
			}
			set
			{
				if ((this._PrefixList != value))
				{
					this.OnPrefixListChanging(value);
					this.SendPropertyChanging();
					this._PrefixList = value;
					this.SendPropertyChanged("PrefixList");
					this.OnPrefixListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelList", DbType="VarChar(15)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ChannelList
		{
			get
			{
				return this._ChannelList;
			}
			set
			{
				if ((this._ChannelList != value))
				{
					this.OnChannelListChanging(value);
					this.SendPropertyChanging();
					this._ChannelList = value;
					this.SendPropertyChanged("ChannelList");
					this.OnChannelListChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlaylistSecondryEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblPlaylistSecondryEvent : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _Description;
		
		private EntitySet<tblPlaylistSecondryEventDetail> _tblPlaylistSecondryEventDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblPlaylistSecondryEvent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlaylistSecondryEvent_tblPlaylistSecondryEventDetail", Storage="_tblPlaylistSecondryEventDetails", ThisKey="SID", OtherKey="tblPlaylistSecondryEventSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<tblPlaylistSecondryEventDetail> tblPlaylistSecondryEventDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._tblPlaylistSecondryEventDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblPlaylistSecondryEventDetails;
			}
			set
			{
				this._tblPlaylistSecondryEventDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlaylistSecondryEventDetails(tblPlaylistSecondryEventDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPlaylistSecondryEvent = this;
		}
		
		private void detach_tblPlaylistSecondryEventDetails(tblPlaylistSecondryEventDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPlaylistSecondryEvent = null;
		}
		
		private void Initialize()
		{
			this._tblPlaylistSecondryEventDetails = new EntitySet<tblPlaylistSecondryEventDetail>(new Action<tblPlaylistSecondryEventDetail>(this.attach_tblPlaylistSecondryEventDetails), new Action<tblPlaylistSecondryEventDetail>(this.detach_tblPlaylistSecondryEventDetails));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlaylistSecondryEventDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblPlaylistSecondryEventDetail : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private System.Nullable<long> _tblPlaylistSecondryEventSID;
		
		private System.Nullable<long> _tblSecondryEventRuleSID;
		
		private EntityRef<tblPlaylistSecondryEvent> _tblPlaylistSecondryEvent;
		
		private EntityRef<tblSecondryEventRule> _tblSecondryEventRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OntblPlaylistSecondryEventSIDChanging(System.Nullable<long> value);
    partial void OntblPlaylistSecondryEventSIDChanged();
    partial void OntblSecondryEventRuleSIDChanging(System.Nullable<long> value);
    partial void OntblSecondryEventRuleSIDChanged();
    #endregion
		
		public tblPlaylistSecondryEventDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblPlaylistSecondryEventSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> tblPlaylistSecondryEventSID
		{
			get
			{
				return this._tblPlaylistSecondryEventSID;
			}
			set
			{
				if ((this._tblPlaylistSecondryEventSID != value))
				{
					if (this._tblPlaylistSecondryEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntblPlaylistSecondryEventSIDChanging(value);
					this.SendPropertyChanging();
					this._tblPlaylistSecondryEventSID = value;
					this.SendPropertyChanged("tblPlaylistSecondryEventSID");
					this.OntblPlaylistSecondryEventSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblSecondryEventRuleSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> tblSecondryEventRuleSID
		{
			get
			{
				return this._tblSecondryEventRuleSID;
			}
			set
			{
				if ((this._tblSecondryEventRuleSID != value))
				{
					if (this._tblSecondryEventRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntblSecondryEventRuleSIDChanging(value);
					this.SendPropertyChanging();
					this._tblSecondryEventRuleSID = value;
					this.SendPropertyChanged("tblSecondryEventRuleSID");
					this.OntblSecondryEventRuleSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlaylistSecondryEvent_tblPlaylistSecondryEventDetail", Storage="_tblPlaylistSecondryEvent", ThisKey="tblPlaylistSecondryEventSID", OtherKey="SID", IsForeignKey=true)]
		public tblPlaylistSecondryEvent tblPlaylistSecondryEvent
		{
			get
			{
				return this._tblPlaylistSecondryEvent.Entity;
			}
			set
			{
				tblPlaylistSecondryEvent previousValue = this._tblPlaylistSecondryEvent.Entity;
				if (((previousValue != value) 
							|| (this._tblPlaylistSecondryEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPlaylistSecondryEvent.Entity = null;
						previousValue.tblPlaylistSecondryEventDetails.Remove(this);
					}
					this._tblPlaylistSecondryEvent.Entity = value;
					if ((value != null))
					{
						value.tblPlaylistSecondryEventDetails.Add(this);
						this._tblPlaylistSecondryEventSID = value.SID;
					}
					else
					{
						this._tblPlaylistSecondryEventSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblPlaylistSecondryEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSecondryEventRule_tblPlaylistSecondryEventDetail", Storage="_tblSecondryEventRule", ThisKey="tblSecondryEventRuleSID", OtherKey="SID", IsForeignKey=true)]
		public tblSecondryEventRule tblSecondryEventRule
		{
			get
			{
				return this._tblSecondryEventRule.Entity;
			}
			set
			{
				tblSecondryEventRule previousValue = this._tblSecondryEventRule.Entity;
				if (((previousValue != value) 
							|| (this._tblSecondryEventRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSecondryEventRule.Entity = null;
						previousValue.tblPlaylistSecondryEventDetails.Remove(this);
					}
					this._tblSecondryEventRule.Entity = value;
					if ((value != null))
					{
						value.tblPlaylistSecondryEventDetails.Add(this);
						this._tblSecondryEventRuleSID = value.SID;
					}
					else
					{
						this._tblSecondryEventRuleSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblSecondryEventRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._tblPlaylistSecondryEvent = default(EntityRef<tblPlaylistSecondryEvent>);
			this._tblSecondryEventRule = default(EntityRef<tblSecondryEventRule>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSecondryEventRule")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblSecondryEventRule : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private string _TxIdPrefix;
		
		private System.Nullable<long> _tblSecondaryEventTypeSID;
		
		private string _Prefix;
		
		private System.Nullable<bool> _Enable;
		
		private System.Nullable<System.TimeSpan> _OffsetTime;
		
		private System.Nullable<System.TimeSpan> _Duration;
		
		private string _EventType;
		
		private string _TimeMode;
		
		private string _Remark;
		
		private string _Mode;
		
		private EntitySet<tblPlaylistSecondryEventDetail> _tblPlaylistSecondryEventDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnTxIdPrefixChanging(string value);
    partial void OnTxIdPrefixChanged();
    partial void OntblSecondaryEventTypeSIDChanging(System.Nullable<long> value);
    partial void OntblSecondaryEventTypeSIDChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    partial void OnOffsetTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnOffsetTimeChanged();
    partial void OnDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDurationChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnTimeModeChanging(string value);
    partial void OnTimeModeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    #endregion
		
		public tblSecondryEventRule()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxIdPrefix", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TxIdPrefix
		{
			get
			{
				return this._TxIdPrefix;
			}
			set
			{
				if ((this._TxIdPrefix != value))
				{
					this.OnTxIdPrefixChanging(value);
					this.SendPropertyChanging();
					this._TxIdPrefix = value;
					this.SendPropertyChanged("TxIdPrefix");
					this.OnTxIdPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblSecondaryEventTypeSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> tblSecondaryEventTypeSID
		{
			get
			{
				return this._tblSecondaryEventTypeSID;
			}
			set
			{
				if ((this._tblSecondaryEventTypeSID != value))
				{
					this.OntblSecondaryEventTypeSIDChanging(value);
					this.SendPropertyChanging();
					this._tblSecondaryEventTypeSID = value;
					this.SendPropertyChanged("tblSecondaryEventTypeSID");
					this.OntblSecondaryEventTypeSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffsetTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.TimeSpan> OffsetTime
		{
			get
			{
				return this._OffsetTime;
			}
			set
			{
				if ((this._OffsetTime != value))
				{
					this.OnOffsetTimeChanging(value);
					this.SendPropertyChanging();
					this._OffsetTime = value;
					this.SendPropertyChanged("OffsetTime");
					this.OnOffsetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.TimeSpan> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeMode", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string TimeMode
		{
			get
			{
				return this._TimeMode;
			}
			set
			{
				if ((this._TimeMode != value))
				{
					this.OnTimeModeChanging(value);
					this.SendPropertyChanging();
					this._TimeMode = value;
					this.SendPropertyChanged("TimeMode");
					this.OnTimeModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSecondryEventRule_tblPlaylistSecondryEventDetail", Storage="_tblPlaylistSecondryEventDetails", ThisKey="SID", OtherKey="tblSecondryEventRuleSID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<tblPlaylistSecondryEventDetail> tblPlaylistSecondryEventDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._tblPlaylistSecondryEventDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._tblPlaylistSecondryEventDetails;
			}
			set
			{
				this._tblPlaylistSecondryEventDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlaylistSecondryEventDetails(tblPlaylistSecondryEventDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblSecondryEventRule = this;
		}
		
		private void detach_tblPlaylistSecondryEventDetails(tblPlaylistSecondryEventDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblSecondryEventRule = null;
		}
		
		private void Initialize()
		{
			this._tblPlaylistSecondryEventDetails = new EntitySet<tblPlaylistSecondryEventDetail>(new Action<tblPlaylistSecondryEventDetail>(this.attach_tblPlaylistSecondryEventDetails), new Action<tblPlaylistSecondryEventDetail>(this.detach_tblPlaylistSecondryEventDetails));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlaylist")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class tblPlaylist : Framework.LINQEntityBase, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SID;
		
		private System.Nullable<System.TimeSpan> _PlayoutTime;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _PlayoutPortSID;
		
		private System.Nullable<long> _MediaSID;
		
		private System.Nullable<System.DateTime> _addon;
		
		private System.Nullable<System.DateTime> _modon;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<double> _PlayOrderSID;
		
		private System.Nullable<bool> _FixedEvent;
		
		private System.Nullable<System.DateTime> _SchDate;
		
		private System.Nullable<bool> _Approved;
		
		private System.Nullable<bool> _Exported;
		
		private System.Nullable<long> _tblPlaylistSecondryEventSID;
		
		private System.Nullable<bool> _LiveEvent;
		
		private System.Nullable<System.TimeSpan> _LiveEventDuration;
		
		private string _LiveTitle;
		
		private string _LiveTXID;
		
		private EntityRef<tblIngestion> _tblIngestion;
		
		private EntityRef<tblPlayoutPort> _tblPlayoutPort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(long value);
    partial void OnSIDChanged();
    partial void OnPlayoutTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnPlayoutTimeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPlayoutPortSIDChanging(System.Nullable<long> value);
    partial void OnPlayoutPortSIDChanged();
    partial void OnMediaSIDChanging(System.Nullable<long> value);
    partial void OnMediaSIDChanged();
    partial void OnaddonChanging(System.Nullable<System.DateTime> value);
    partial void OnaddonChanged();
    partial void OnmodonChanging(System.Nullable<System.DateTime> value);
    partial void OnmodonChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnPlayOrderSIDChanging(System.Nullable<double> value);
    partial void OnPlayOrderSIDChanged();
    partial void OnFixedEventChanging(System.Nullable<bool> value);
    partial void OnFixedEventChanged();
    partial void OnSchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSchDateChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnExportedChanging(System.Nullable<bool> value);
    partial void OnExportedChanged();
    partial void OntblPlaylistSecondryEventSIDChanging(System.Nullable<long> value);
    partial void OntblPlaylistSecondryEventSIDChanged();
    partial void OnLiveEventChanging(System.Nullable<bool> value);
    partial void OnLiveEventChanged();
    partial void OnLiveEventDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnLiveEventDurationChanged();
    partial void OnLiveTitleChanging(string value);
    partial void OnLiveTitleChanged();
    partial void OnLiveTXIDChanging(string value);
    partial void OnLiveTXIDChanged();
    #endregion
		
		public tblPlaylist()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayoutTime", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.TimeSpan> PlayoutTime
		{
			get
			{
				return this._PlayoutTime;
			}
			set
			{
				if ((this._PlayoutTime != value))
				{
					this.OnPlayoutTimeChanging(value);
					this.SendPropertyChanging();
					this._PlayoutTime = value;
					this.SendPropertyChanged("PlayoutTime");
					this.OnPlayoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayoutPortSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> PlayoutPortSID
		{
			get
			{
				return this._PlayoutPortSID;
			}
			set
			{
				if ((this._PlayoutPortSID != value))
				{
					if (this._tblPlayoutPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayoutPortSIDChanging(value);
					this.SendPropertyChanging();
					this._PlayoutPortSID = value;
					this.SendPropertyChanged("PlayoutPortSID");
					this.OnPlayoutPortSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> MediaSID
		{
			get
			{
				return this._MediaSID;
			}
			set
			{
				if ((this._MediaSID != value))
				{
					if (this._tblIngestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediaSIDChanging(value);
					this.SendPropertyChanging();
					this._MediaSID = value;
					this.SendPropertyChanged("MediaSID");
					this.OnMediaSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> addon
		{
			get
			{
				return this._addon;
			}
			set
			{
				if ((this._addon != value))
				{
					this.OnaddonChanging(value);
					this.SendPropertyChanging();
					this._addon = value;
					this.SendPropertyChanged("addon");
					this.OnaddonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modon", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> modon
		{
			get
			{
				return this._modon;
			}
			set
			{
				if ((this._modon != value))
				{
					this.OnmodonChanging(value);
					this.SendPropertyChanging();
					this._modon = value;
					this.SendPropertyChanged("modon");
					this.OnmodonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayOrderSID", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> PlayOrderSID
		{
			get
			{
				return this._PlayOrderSID;
			}
			set
			{
				if ((this._PlayOrderSID != value))
				{
					this.OnPlayOrderSIDChanging(value);
					this.SendPropertyChanging();
					this._PlayOrderSID = value;
					this.SendPropertyChanged("PlayOrderSID");
					this.OnPlayOrderSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedEvent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> FixedEvent
		{
			get
			{
				return this._FixedEvent;
			}
			set
			{
				if ((this._FixedEvent != value))
				{
					this.OnFixedEventChanging(value);
					this.SendPropertyChanging();
					this._FixedEvent = value;
					this.SendPropertyChanged("FixedEvent");
					this.OnFixedEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> SchDate
		{
			get
			{
				return this._SchDate;
			}
			set
			{
				if ((this._SchDate != value))
				{
					this.OnSchDateChanging(value);
					this.SendPropertyChanging();
					this._SchDate = value;
					this.SendPropertyChanged("SchDate");
					this.OnSchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exported", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> Exported
		{
			get
			{
				return this._Exported;
			}
			set
			{
				if ((this._Exported != value))
				{
					this.OnExportedChanging(value);
					this.SendPropertyChanging();
					this._Exported = value;
					this.SendPropertyChanged("Exported");
					this.OnExportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tblPlaylistSecondryEventSID", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<long> tblPlaylistSecondryEventSID
		{
			get
			{
				return this._tblPlaylistSecondryEventSID;
			}
			set
			{
				if ((this._tblPlaylistSecondryEventSID != value))
				{
					this.OntblPlaylistSecondryEventSIDChanging(value);
					this.SendPropertyChanging();
					this._tblPlaylistSecondryEventSID = value;
					this.SendPropertyChanged("tblPlaylistSecondryEventSID");
					this.OntblPlaylistSecondryEventSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveEvent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> LiveEvent
		{
			get
			{
				return this._LiveEvent;
			}
			set
			{
				if ((this._LiveEvent != value))
				{
					this.OnLiveEventChanging(value);
					this.SendPropertyChanging();
					this._LiveEvent = value;
					this.SendPropertyChanged("LiveEvent");
					this.OnLiveEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveEventDuration", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.TimeSpan> LiveEventDuration
		{
			get
			{
				return this._LiveEventDuration;
			}
			set
			{
				if ((this._LiveEventDuration != value))
				{
					this.OnLiveEventDurationChanging(value);
					this.SendPropertyChanging();
					this._LiveEventDuration = value;
					this.SendPropertyChanged("LiveEventDuration");
					this.OnLiveEventDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveTitle", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string LiveTitle
		{
			get
			{
				return this._LiveTitle;
			}
			set
			{
				if ((this._LiveTitle != value))
				{
					this.OnLiveTitleChanging(value);
					this.SendPropertyChanging();
					this._LiveTitle = value;
					this.SendPropertyChanged("LiveTitle");
					this.OnLiveTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveTXID", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string LiveTXID
		{
			get
			{
				return this._LiveTXID;
			}
			set
			{
				if ((this._LiveTXID != value))
				{
					this.OnLiveTXIDChanging(value);
					this.SendPropertyChanging();
					this._LiveTXID = value;
					this.SendPropertyChanged("LiveTXID");
					this.OnLiveTXIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblIngestion_tblPlaylist", Storage="_tblIngestion", ThisKey="MediaSID", OtherKey="SID", IsForeignKey=true)]
		public tblIngestion tblIngestion
		{
			get
			{
				return this._tblIngestion.Entity;
			}
			set
			{
				tblIngestion previousValue = this._tblIngestion.Entity;
				if (((previousValue != value) 
							|| (this._tblIngestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblIngestion.Entity = null;
						previousValue.tblPlaylists.Remove(this);
					}
					this._tblIngestion.Entity = value;
					if ((value != null))
					{
						value.tblPlaylists.Add(this);
						this._MediaSID = value.SID;
					}
					else
					{
						this._MediaSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblIngestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlayoutPort_tblPlaylist", Storage="_tblPlayoutPort", ThisKey="PlayoutPortSID", OtherKey="SID", IsForeignKey=true)]
		public tblPlayoutPort tblPlayoutPort
		{
			get
			{
				return this._tblPlayoutPort.Entity;
			}
			set
			{
				tblPlayoutPort previousValue = this._tblPlayoutPort.Entity;
				if (((previousValue != value) 
							|| (this._tblPlayoutPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPlayoutPort.Entity = null;
						previousValue.tblPlaylists.Remove(this);
					}
					this._tblPlayoutPort.Entity = value;
					if ((value != null))
					{
						value.tblPlaylists.Add(this);
						this._PlayoutPortSID = value.SID;
					}
					else
					{
						this._PlayoutPortSID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblPlayoutPort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._tblIngestion = default(EntityRef<tblIngestion>);
			this._tblPlayoutPort = default(EntityRef<tblPlayoutPort>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
